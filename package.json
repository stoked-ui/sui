{
  "name": "@stoked-ui/sui",
  "version": "0.1.0-alpha.5",
  "private": true,
  "scripts": {
    "rebuild": "pnpm clean && pnpm clean && pnpm i && pnpm build && rm -rf docs/.next && pnpm docs:build",
    "build:fresh": "pnpm clean && pnpm i && pnpm build",
    "build:fresh:all": "pnpm clean && pnpm i && pnpm build:all",
    "build:all": "lerna run build --skip-nx-cache --ignore stokedui-com && pnpm docs:build",
    "build:prod": "pnpm build && pnpm docs:build",
    "build:dev": "pnpm build && pnpm docs:dev",
    "preinstall": "npx only-allow pnpm",
    "build:site": "./scripts/buildSite.sh",
    "envVars": "dotenvx",
    "deploy:prod": "dotenvx --debug run -- sst deploy --stage production",
    "deploy": "cross-env ROOT_DOMAIN=stoked-ui.com,stokedconsulting.com sst deploy",
    "deploy:stage": "sst deploy --stage",
    "deploy:local": "dotenvx -- sst deploy  2>&1 | grep \"level=ERROR\"",
    "remove": "dotenvx -- sst deploy --stage ",
    "release": "pnpm build:all && pnpm release:version && pnpm deploy:prod",
    "proptypes": "cross-env BABEL_ENV=development babel-node -i \"/node_modules/(?!@stoked-ui)/\" -x .ts,.tsx,.js ./docs/scripts/generateProptypes.ts",
    "deduplicate": "pnpm dedupe",
    "benchmark:browser": "pnpm --filter benchmark browser",
    "build": "lerna run build --ignore stokedui-com",
    "build:clean": "lerna run build --ignore stokedui-com --skip-nx-cache",
    "build:full": "pnpm build && pnpm proptypes && pnpm docs:api && pnpm docs:build",
    "build:docs": "pnpm --filter stokedui-com build",
    "build:public": "lerna run --no-private build",
    "build:ci": "lerna run build --ignore stokedui-com --concurrency 8 --skip-nx-cache",
    "build:zero": "lerna run --scope \"@pigmentcss/*\" build",
    "clean:zero": "pnpm --filter \"@pigmentcss/*\" clean",
    "build:codesandbox": "NODE_OPTIONS=\"--max_old_space_size=4096\" lerna run --concurrency 8 --scope \"@stoked-ui/*\" --no-private build",
    "local-npm:install": "pnpm i -g verdaccio",
    "local-npm:start": "verdaccio",
    "local-npm:user": "pnpm adduser --registry=\"http://localhost:4873\"",
    "local-npm:stop": "lsof -P | grep ':4873' | awk '{print $2}' | xargs kill -9",
    "release:version": "lerna version --no-private",
    "release:build": "lerna run --concurrency 8 --no-private build --skip-nx-cache",
    "release:changelog": "node scripts/releaseChangelog.mjs",
    "release:publish": "pnpm publish --recursive --tag latest",
    "release:publish:dry-run": "pnpm local-npm:start & pnpm publish --recursive --tag latest --registry=\"http://localhost:4873/\" && pnpm local-npm:stop",
    "release:unpublish:dry-run": "pnpm local-npm:start & pnpm unpublish --recursive --registry=\"http://localhost:4873/\" && pnpm local-npm:stop",
    "release:tag": "node scripts/releaseTag.mjs",
    "clean": "rimraf --glob '**/.eslintcache' '**/pnpm-lock.yaml' '**/package-lock.json' '**/yarn.lock' '**/node_modules/' '**/dist' '**/.sst' '**/build' '**/.nx' '**/.next' 'docs/export' '**/*.tsbuildinfo'",
    "clean:build": "rimraf --glob '**/dist' '**/build' '**/.nx' '**/.next' '**/docs/export'",
    "docs:api": "NODE_OPTIONS=--max-old-space-size=4096 pnpm docs:api:build && pnpm docs:api:buildX",
    "docs:api:build": "cross-env BABEL_ENV=development babel-node -i \"/node_modules/(?!@stoked-ui)/\" -x .ts,.tsx,.js ./scripts/buildApiDocs/index.ts",
    "docs:api:buildX": "cross-env BABEL_ENV=development babel-node -i \"/node_modules/(?!@stoked-ui)/\" -x .ts,.tsx,.js ./docs/scripts/api/buildApi.ts",
    "docs:build": "pnpm --filter stokedui-com build",
    "docs:build-sw": "pnpm --filter stokedui-com build-sw",
    "docs:build-color-preview": "babel-node scripts/buildColorTypes",
    "docs:deploy": "pnpm --filter stokedui-com run deploy",
    "docs:release": "pnpm --filter stokedui-com run deploy:release",
    "dev": "pnpm docs:debug",
    "docs:dev": "pnpm --filter stokedui-com dev",
    "caladan": "pnpm --filter stokedui-com caladan",
    "docs:debug": "pnpm --filter stokedui-com debug",
    "docs:icons": "pnpm --filter stokedui-com icons",
    "docs:size-why": "cross-env DOCS_STATS_ENABLED=true pnpm docs:build",
    "docs:start": "pnpm --filter stokedui-com start",
    "docs:create-playground": "pnpm --filter stokedui-com create-playground",
    "docs:i18n": "cross-env BABEL_ENV=development babel-node --extensions \".tsx,.ts,.js\" ./docs/scripts/i18n.ts",
    "docs:link-check": "pnpm --filter stokedui-com link-check",
    "docs:typescript": "pnpm docs:typescript:formatted --watch",
    "docs:typescript:check": "pnpm --filter stokedui-com typescript",
    "docs:typescript:formatted": "tsx ./docs/scripts/formattedTSDemos",
    "docs:mdicons:synonyms": "cross-env BABEL_ENV=development babel-node --extensions \".tsx,.ts,.js,.mjs\" ./docs/scripts/updateIconSynonyms && pnpm prettier",
    "docs:zipRules": "cd docs && rm mui-vale.zip && zip -r mui-vale.zip mui-vale && cd ../ && vale sync",
    "extract-error-codes": "cross-env MUI_EXTRACT_ERROR_CODES=true lerna run --concurrency 8 build:modern",
    "rsc:build": "tsx ./packages/rsc-builder/buildRsc.ts",
    "template:screenshot": "cross-env BABEL_ENV=development babel-node --extensions \".tsx,.ts,.js\" ./docs/scripts/generateTemplateScreenshots",
    "install:codesandbox": "pnpm install --no-frozen-lockfile",
    "jsonlint": "node ./scripts/jsonlint.mjs",
    "eslint": "eslint . --cache --report-unused-disable-directives --ext .js,.ts,.tsx --max-warnings 0",
    "eslint:fix": "eslint . --cache --report-unused-disable-directives --ext .js,.ts,.tsx --max-warnings 0 --fix",
    "eslint:ci": "eslint . --report-unused-disable-directives --ext .js,.ts,.tsx --max-warnings 0",
    "stylelint": "stylelint --reportInvalidScopeDisables --reportNeedlessDisables \"docs/**/*.{js,ts,tsx}\"",
    "markdownlint": "markdownlint-cli2 \"**/*.md\"",
    "valelint": "git ls-files | grep -h \".md$\" | xargs vale --filter='.Level==\"error\"'",
    "prettier": "pretty-quick --ignore-path .eslintignore",
    "prettier:all": "prettier --write . --ignore-path .eslintignore",
    "size:snapshot": "node --max-old-space-size=4096 ./scripts/sizeSnapshot/create",
    "size:why": "pnpm size:snapshot --analyze",
    "start": "pnpm docs:debug",
    "test": "node scripts/test.mjs",
    "tc": "node test/cli.js",
    "test:extended": "pnpm eslint && pnpm typescript && pnpm test:coverage",
    "test:pigment-css-react:ci": "pnpm nx run @pigment-css/react:test:ci",
    "test:coverage": "cross-env NODE_ENV=test BABEL_ENV=coverage nyc --reporter=text mocha 'packages/**/*.test.{js,ts,tsx}' 'docs/**/*.test.{js,ts,tsx}' --exclude 'packages/pigment-css-react/**/*.test.{js,ts,tsx}' && pnpm test:pigment-css-react",
    "test:coverage:ci": "cross-env NODE_ENV=test BABEL_ENV=coverage nyc --reporter=lcov mocha 'packages/**/*.test.{js,ts,tsx}' 'docs/**/*.test.{js,ts,tsx}' --exclude 'packages/pigment-css-react/**/*.test.{js,ts,tsx}' && pnpm test:pigment-css-react:ci",
    "test:coverage:html": "cross-env NODE_ENV=test BABEL_ENV=coverage nyc --reporter=html mocha 'packages/**/*.test.{js,ts,tsx}' 'docs/**/*.test.{js,ts,tsx}'",
    "test:e2e": "cross-env NODE_ENV=production pnpm test:e2e:build && concurrently --success first --kill-others \"pnpm test:e2e:run\" \"pnpm test:e2e:server\"",
    "test:e2e:build": "webpack --config test/e2e/webpack.config.js",
    "test:e2e:dev": "concurrently \"pnpm test:e2e:build --watch\" \"pnpm test:e2e:server\"",
    "test:e2e:run": "mocha --config test/e2e/.mocharc.js 'test/e2e/**/*.test.{js,ts,tsx}'",
    "test:e2e:server": "serve test/e2e -p 5001",
    "test:e2e-website": "playwright test test/e2e-website --config test/e2e-website/playwright.config.ts",
    "test:e2e-website:dev": "cross-env PLAYWRIGHT_TEST_BASE_URL=http://localhost:3000 playwright test test/e2e-website --config test/e2e-website/playwright.config.ts",
    "test:karma": "cross-env NODE_ENV=test karma start test/karma.conf.js",
    "test:karma:profile": "cross-env NODE_ENV=test karma start test/karma.conf.profile.js",
    "test:regressions": "cross-env NODE_ENV=production pnpm test:regressions:build && concurrently --success first --kill-others \"pnpm test:regressions:run\" \"pnpm test:regressions:server\"",
    "test:regressions:build": "webpack --config test/regressions/webpack.config.js",
    "test:regressions:dev": "concurrently \"pnpm test:regressions:build --watch\" \"pnpm test:regressions:server\"",
    "test:regressions:run": "mocha --config test/regressions/.mocharc.js --delay 'test/regressions/**/*.test.js'",
    "test:regressions:server": "serve test/regressions -p 5001",
    "test:umd": "node packages/sui-file-explorer/test/umd/run.js",
    "test:unit": "cross-env NODE_ENV=test mocha 'packages/**/*.test.{js,ts,tsx}' 'docs/**/*.test.{js,ts,tsx}'",
    "test:argos": "node ./scripts/pushArgos.mjs",
    "typescript": "lerna run --no-bail --parallel typescript",
    "typescript:ci": "lerna run --concurrency 3 --no-bail --no-sort typescript",
    "validate-declarations": "tsx scripts/validateTypescriptDeclarations.mts",
    "generate-codeowners": "node scripts/generateCodeowners.mjs",
    "watch:zero": "nx run-many -t watch --projects=\"@pigmentcss/*\" --parallel",
    "depfix": "pnpm --recursive exec -- rm-udeps"
  },
  "dependencies": {
    "@aws-sdk/client-sns": "^3.750.0",
    "@googleapis/sheets": "^5.0.5",
    "@netlify/functions": "^2.6.0",
    "@slack/bolt": "^3.17.1",
    "aws-lambda": "1.0.7",
    "execa": "^8.0.1",
    "google-auth-library": "^9.7.0",
    "mongodb": "^6.12.0",
    "playwright": "1.49"
  },
  "devDependencies": {
    "@argos-ci/core": "^1.5.5",
    "@babel/cli": "^7.26.4",
    "@babel/core": "^7.26.9",
    "@babel/node": "^7.23.9",
    "@babel/plugin-proposal-class-properties": "^7.18.6",
    "@babel/plugin-proposal-export-default-from": "^7.25.9",
    "@babel/plugin-proposal-object-rest-spread": "^7.20.7",
    "@babel/plugin-proposal-private-methods": "^7.18.6",
    "@babel/plugin-proposal-private-property-in-object": "^7.21.11",
    "@babel/plugin-transform-object-assign": "^7.23.3",
    "@babel/plugin-transform-runtime": "^7.23.9",
    "@babel/preset-env": "^7.23.9",
    "@babel/preset-react": "^7.23.3",
    "@babel/preset-typescript": "^7.23.3",
    "@babel/register": "^7.23.9",
    "@mui/material": "^5.15.21",
    "@mui/utils": "^5.15.20",
    "@next/eslint-plugin-next": "^14.1.3",
    "@octokit/rest": "^20.0.2",
    "@playwright/test": "1.42.1",
    "@stoked-ui/docs-markdown": "workspace:^",
    "@stoked-ui/docs-utils": "workspace:^",
    "@stoked-ui/internal-api-docs-builder": "workspace:^",
    "@stoked-ui/proptypes": "workspace:^",
    "@types/fs-extra": "^11.0.4",
    "@types/lodash": "^4.17.0",
    "@types/mocha": "^10.0.6",
    "@types/node": "^18.19.25",
    "@types/prettier": "^2.7.3",
    "@types/react": "^18.3.1",
    "@types/yargs": "^17.0.32",
    "@typescript-eslint/eslint-plugin": "^6.19.1",
    "@typescript-eslint/parser": "^6.19.1",
    "babel-loader": "^9.1.3",
    "babel-plugin-istanbul": "^6.1.1",
    "babel-plugin-macros": "^3.1.0",
    "babel-plugin-module-resolver": "^5.0.0",
    "babel-plugin-optimize-clsx": "^2.6.2",
    "babel-plugin-react-remove-properties": "^0.3.0",
    "babel-plugin-transform-react-remove-prop-types": "^0.4.24",
    "chalk": "^5.3.0",
    "compression-webpack-plugin": "^11.1.0",
    "concurrently": "^8.2.2",
    "cross-env": "^7.0.3",
    "danger": "^11.3.1",
    "eslint": "^8.56.0",
    "eslint-config-airbnb": "^19.0.4",
    "eslint-config-airbnb-base": "^15.0.0",
    "eslint-config-airbnb-typescript": "^17.1.0",
    "eslint-config-prettier": "^9.1.0",
    "eslint-plugin-filenames": "^1.3.2",
    "eslint-plugin-import": "^2.29.1",
    "eslint-plugin-jsx-a11y": "^6.7.1",
    "eslint-plugin-mocha": "^10.4.1",
    "eslint-plugin-react": "^7.34.1",
    "eslint-plugin-react-hooks": "^4.6.0",
    "eslint-plugin-stoked-ui": "workspace:^",
    "fast-glob": "^3.3.2",
    "fs-extra": "^11.2.0",
    "globby": "^14.0.1",
    "karma": "^6.4.3",
    "lerna": "^8.2.1",
    "lodash": "^4.17.21",
    "markdownlint-cli2": "^0.12.1",
    "mocha": "^10.3.0",
    "nx": "^20.5.0",
    "nyc": "^15.1.0",
    "piscina": "^4.4.0",
    "prettier": "^3.2.5",
    "pretty-quick": "^4.0.0",
    "serve": "^14.2.1",
    "sst": "3.9.7",
    "stylelint": "^15.11.0",
    "terser-webpack-plugin": "^5.3.10",
    "tsup": "^8.0.2",
    "tsx": "^4.7.1",
    "typescript": "^5.4.5",
    "webpack": "^5.90.3",
    "webpack-bundle-analyzer": "^4.10.1",
    "yargs": "^17.7.2"
  },
  "engines": {
    "pnpm": "^10.5.1"
  },
  "resolutions": {
    "@babel/core": "^7.23.9",
    "@babel/code-frame": "^7.23.5",
    "@babel/plugin-proposal-class-properties": "^7.18.6",
    "@babel/plugin-proposal-object-rest-spread": "^7.20.7",
    "@babel/plugin-proposal-nullish-coalescing-operator": "^7.18.6",
    "@babel/plugin-proposal-numeric-separator": "^7.18.6",
    "@babel/plugin-proposal-optional-chaining": "^7.21.0",
    "@babel/plugin-transform-destructuring": "npm:@minh.nguyen/plugin-transform-destructuring@^7.5.2",
    "@babel/plugin-transform-runtime": "^7.23.9",
    "@babel/preset-env": "^7.23.9",
    "@babel/preset-react": "^7.23.3",
    "@babel/preset-typescript": "^7.23.3",
    "@babel/runtime": "^7.23.9",
    "@babel/types": "^7.23.9",
    "@definitelytyped/header-parser": "^0.2.8",
    "@definitelytyped/typescript-versions": "^0.1.1",
    "@definitelytyped/utils": "^0.1.5",
    "@types/node": "^18.19.25",
    "@types/react": "^18.3.1",
    "@types/react-dom": "^18.3.0",
    "@mui/material": "^5.15.21",
    "@mui/utils": "^5.15.20",
    "cross-fetch": "^4.0.0",
    "react": "18.3.1",
    "react-dom": "18.3.1"
  },
  "pnpm": {
    "overrides": {
      "nx": "^20.5.0",
      "@emotion/styled": "11.8.1",
      "@interactjs/actions": "1.10.11",
      "@interactjs/core": "1.10.11",
      "@interactjs/types": "1.10.11",
      "@mui/system": "5.15.20",
      "@mui/material": "5.15.21",
      "@mui/utils": "5.15.20",
      "@mui/base": "5.0.0-beta.40"
    }
  },
  "nyc": {
    "include": [
      "packages/sui*/src/**/*.{js,ts,tsx}"
    ],
    "exclude": [
      "**/*.test.{js,ts,tsx}",
      "**/*.test/*"
    ],
    "sourceMap": false,
    "instrument": false
  },
  "nodemonConfig": {
    "ignore": [
      "**/build/**",
      "**/.next/**",
      "**/.nx/**",
      "**/export/**"
    ],
    "ext": "js, json, ts, tsx, jsx",
    "delay": 10000
  }
}
