{
  "name": "@mui/monorepo",
  "version": "5.15.3",
  "private": true,
  "scripts": {
    "preinstall": "npx only-allow pnpm",
    "proptypes": "cross-env BABEL_ENV=development babel-node --extensions \".tsx,.ts,.js\" ./scripts/generateProptypes.ts",
    "deduplicate": "pnpm dedupe",
    "benchmark:browser": "pnpm --filter benchmark browser",
    "build": "lerna run --scope \"@mui/*\" build",
    "build:zero": "lerna run --scope \"@mui/zero-*\" build",
    "clean:zero": "pnpm --filter \"@mui/zero-*\" clean",
    "build:codesandbox": "NODE_OPTIONS=\"â€“max_old_space_size=4096\" lerna run --concurrency 8 --scope \"@mui/*\" build",
    "release:version": "lerna version --no-changelog --no-push --no-git-tag-version --no-private --force-publish=@mui/core-downloads-tracker",
    "release:build": "lerna run --concurrency 8 --scope \"@mui/*\" build --skip-nx-cache",
    "release:changelog": "node scripts/releaseChangelog.mjs",
    "release:publish": "pnpm publish --recursive --tag latest",
    "release:publish:dry-run": "pnpm publish --recursive --tag latest --registry=\"http://localhost:4873/\"",
    "release:tag": "node scripts/releaseTag.mjs",
    "docs:api": "rimraf --glob ./docs/pages/**/api-docs ./docs/pages/**/api && pnpm docs:api:build",
    "docs:api:build": "tsx ./scripts/buidApiDocs/index.ts",
    "docs:build": "pnpm --filter docs build",
    "docs:build-sw": "pnpm --filter docs build-sw",
    "docs:build-color-preview": "babel-node scripts/buildColorTypes",
    "docs:deploy": "pnpm --filter docs deploy",
    "docs:dev": "pnpm --filter docs dev",
    "docs:export": "pnpm --filter docs export",
    "docs:icons": "pnpm --filter docs icons",
    "docs:size-why": "cross-env DOCS_STATS_ENABLED=true pnpm docs:build",
    "docs:start": "pnpm --filter docs start",
    "docs:create-playground": "pnpm --filter docs create-playground",
    "docs:i18n": "cross-env BABEL_ENV=development babel-node --extensions \".tsx,.ts,.js\" ./docs/scripts/i18n.js",
    "docs:link-check": "pnpm --filter docs link-check",
    "docs:typescript": "pnpm docs:typescript:formatted --watch",
    "docs:typescript:check": "pnpm --filter docs typescript",
    "docs:typescript:formatted": "cross-env BABEL_ENV=development babel-node --extensions \".tsx,.ts,.js\" ./docs/scripts/formattedTSDemos",
    "docs:mdicons:synonyms": "cross-env BABEL_ENV=development babel-node --extensions \".tsx,.ts,.js,.mjs\" ./docs/scripts/updateIconSynonyms && pnpm prettier",
    "extract-error-codes": "cross-env MUI_EXTRACT_ERROR_CODES=true lerna run --concurrency 8 build:modern",
    "rsc:build": "tsx ./packages/rsc-builder/buildRsc.ts",
    "template:screenshot": "cross-env BABEL_ENV=development babel-node --extensions \".tsx,.ts,.js\" ./docs/scripts/generateTemplateScreenshots",
    "install:codesandbox": "pnpm install --no-frozen-lockfile",
    "jsonlint": "node ./scripts/jsonlint.mjs",
    "eslint": "eslint . --cache --report-unused-disable-directives --ext .js,.ts,.tsx --max-warnings 0",
    "eslint:ci": "eslint . --report-unused-disable-directives --ext .js,.ts,.tsx --max-warnings 0",
    "stylelint": "stylelint --reportInvalidScopeDisables --reportNeedlessDisables \"docs/**/*.{js,ts,tsx}\"",
    "markdownlint": "markdownlint-cli2 \"**/*.md\"",
    "prettier": "pretty-quick --ignore-path .eslintignore",
    "prettier:all": "prettier --write . --ignore-path .eslintignore",
    "size:snapshot": "node --max-old-space-size=4096 ./scripts/sizeSnapshot/create",
    "size:why": "pnpm size:snapshot --analyze",
    "start": "pnpm install && pnpm docs:dev",
    "test": "node scripts/test.mjs",
    "tc": "node test/cli.js",
    "test:extended": "pnpm eslint && pnpm typescript && pnpm test:coverage",
    "test:coverage": "cross-env NODE_ENV=test BABEL_ENV=coverage nyc --reporter=text mocha 'packages/**/*.test.{js,ts,tsx}' 'docs/**/*.test.{js,ts,tsx}'",
    "test:coverage:ci": "cross-env NODE_ENV=test BABEL_ENV=coverage nyc --reporter=lcov mocha 'packages/**/*.test.{js,ts,tsx}' 'docs/**/*.test.{js,ts,tsx}'",
    "test:coverage:html": "cross-env NODE_ENV=test BABEL_ENV=coverage nyc --reporter=html mocha 'packages/**/*.test.{js,ts,tsx}' 'docs/**/*.test.{js,ts,tsx}'",
    "test:e2e": "cross-env NODE_ENV=production pnpm test:e2e:build && concurrently --success first --kill-others \"pnpm test:e2e:run\" \"pnpm test:e2e:server\"",
    "test:e2e:build": "webpack --config test/e2e/webpack.config.js",
    "test:e2e:dev": "concurrently \"pnpm test:e2e:build --watch\" \"pnpm test:e2e:server\"",
    "test:e2e:run": "mocha --config test/e2e/.mocharc.js 'test/e2e/**/*.test.{js,ts,tsx}'",
    "test:e2e:server": "serve test/e2e -p 5001",
    "test:e2e-website": "playwright test test/e2e-website --config test/e2e-website/playwright.config.ts",
    "test:e2e-website:dev": "cross-env PLAYWRIGHT_TEST_BASE_URL=http://localhost:3000 playwright test test/e2e-website --config test/e2e-website/playwright.config.ts",
    "test:karma": "cross-env NODE_ENV=test karma start test/karma.conf.js",
    "test:karma:profile": "cross-env NODE_ENV=test karma start test/karma.conf.profile.js",
    "test:regressions": "cross-env NODE_ENV=production pnpm test:regressions:build && concurrently --success first --kill-others \"pnpm test:regressions:run\" \"pnpm test:regressions:server\"",
    "test:regressions:build": "webpack --config test/regressions/webpack.config.js",
    "test:regressions:dev": "concurrently \"pnpm test:regressions:build --watch\" \"pnpm test:regressions:server\"",
    "test:regressions:run": "mocha --config test/regressions/.mocharc.js --delay 'test/regressions/**/*.test.js'",
    "test:regressions:server": "serve test/regressions -p 5001",
    "test:umd": "node packages/mui-material/test/umd/run.js",
    "test:unit": "cross-env NODE_ENV=test mocha 'packages/**/*.test.{js,ts,tsx}' 'docs/**/*.test.{js,ts,tsx}'",
    "test:argos": "node ./scripts/pushArgos.mjs",
    "typescript": "lerna run --no-bail --parallel typescript",
    "typescript:ci": "lerna run --concurrency 5 --no-bail --no-sort typescript",
    "validate-declarations": "tsx scripts/validateTypescriptDeclarations.mts",
    "generate-codeowners": "node scripts/generateCodeowners.mjs",
    "watch:zero": "lerna watch -- lerna run watch --scope=$LERNA_PACKAGE_NAME"
  },
  "dependencies": {
    "@googleapis/sheets": "^5.0.5",
    "@slack/bolt": "^3.17.0",
    "google-auth-library": "^9.4.1"
  },
  "devDependencies": {
    "@argos-ci/core": "^1.4.0",
    "@babel/cli": "^7.23.4",
    "@babel/core": "^7.23.7",
    "@babel/node": "^7.22.19",
    "@babel/plugin-proposal-class-properties": "^7.18.6",
    "@babel/plugin-proposal-object-rest-spread": "^7.20.7",
    "@babel/plugin-proposal-private-methods": "^7.18.6",
    "@babel/plugin-proposal-private-property-in-object": "^7.21.11",
    "@babel/plugin-transform-object-assign": "^7.23.3",
    "@babel/plugin-transform-react-constant-elements": "^7.23.3",
    "@babel/plugin-transform-runtime": "^7.23.7",
    "@babel/preset-env": "^7.23.7",
    "@babel/preset-react": "^7.23.3",
    "@babel/register": "^7.23.7",
    "@mnajdova/enzyme-adapter-react-18": "^0.2.0",
    "@mui-internal/api-docs-builder": "workspace:^",
    "@mui-internal/api-docs-builder-core": "workspace:^",
    "@mui-internal/docs-utilities": "workspace:^",
    "@mui-internal/test-utils": "workspace:^",
    "@mui/joy": "workspace:*",
    "@mui/material": "workspace:^",
    "@mui/utils": "workspace:^",
    "@next/eslint-plugin-next": "^14.0.4",
    "@octokit/rest": "^20.0.2",
    "@playwright/test": "1.40.1",
    "@slack/web-api": "^6.11.1",
    "@types/enzyme": "^3.10.18",
    "@types/fs-extra": "^11.0.4",
    "@types/lodash": "^4.14.202",
    "@types/mocha": "^10.0.6",
    "@types/node": "^18.19.4",
    "@types/prettier": "^2.7.3",
    "@types/react": "^18.2.46",
    "@types/yargs": "^17.0.32",
    "@typescript-eslint/eslint-plugin": "^6.17.0",
    "@typescript-eslint/parser": "^6.17.0",
    "babel-loader": "^9.1.3",
    "babel-plugin-istanbul": "^6.1.1",
    "babel-plugin-macros": "^3.1.0",
    "babel-plugin-module-resolver": "^5.0.0",
    "babel-plugin-optimize-clsx": "^2.6.2",
    "babel-plugin-react-remove-properties": "^0.3.0",
    "babel-plugin-transform-react-remove-prop-types": "^0.4.24",
    "chalk": "^5.3.0",
    "compression-webpack-plugin": "^10.0.0",
    "concurrently": "^8.2.2",
    "cpy-cli": "^5.0.0",
    "cross-env": "^7.0.3",
    "danger": "^11.3.1",
    "enzyme": "^3.11.0",
    "eslint": "^8.56.0",
    "eslint-config-airbnb": "^19.0.4",
    "eslint-config-airbnb-base": "^15.0.0",
    "eslint-config-airbnb-typescript": "^17.1.0",
    "eslint-config-prettier": "^9.1.0",
    "eslint-import-resolver-webpack": "^0.13.8",
    "eslint-plugin-babel": "^5.3.1",
    "eslint-plugin-filenames": "^1.3.2",
    "eslint-plugin-import": "^2.29.1",
    "eslint-plugin-jsx-a11y": "^6.7.1",
    "eslint-plugin-material-ui": "workspace:^",
    "eslint-plugin-mocha": "^10.2.0",
    "eslint-plugin-react": "^7.33.2",
    "eslint-plugin-react-hooks": "^4.6.0",
    "fast-glob": "^3.3.2",
    "fs-extra": "^11.2.0",
    "globby": "^13.2.2",
    "karma": "^6.4.2",
    "karma-browserstack-launcher": "~1.6.0",
    "karma-chrome-launcher": "^3.2.0",
    "karma-coverage-istanbul-reporter": "^3.0.3",
    "karma-firefox-launcher": "^2.1.2",
    "karma-mocha": "^2.0.1",
    "karma-sourcemap-loader": "^0.4.0",
    "karma-webpack": "^5.0.0",
    "lerna": "^8.0.2",
    "lodash": "^4.17.21",
    "markdownlint-cli2": "^0.11.0",
    "mocha": "^10.2.0",
    "nx": "^17.2.8",
    "nyc": "^15.1.0",
    "piscina": "^4.2.1",
    "postcss-styled-syntax": "^0.6.4",
    "prettier": "^2.8.8",
    "pretty-quick": "^3.1.3",
    "process": "^0.11.10",
    "raw-loader": "4.0.2",
    "rimraf": "^5.0.5",
    "serve": "^14.2.1",
    "stylelint": "^15.11.0",
    "stylelint-config-standard": "^34.0.0",
    "stylelint-processor-styled-components": "^1.10.0",
    "terser-webpack-plugin": "^5.3.10",
    "tsx": "^4.7.0",
    "tsup": "^8.0.1",
    "typescript": "^5.3.3",
    "typescript-to-proptypes": "workspace:^",
    "webpack": "^5.89.0",
    "webpack-bundle-analyzer": "^4.10.1",
    "webpack-cli": "^5.1.4",
    "yargs": "^17.7.2"
  },
  "packageManager": "pnpm@8.13.1",
  "resolutions": {
    "@babel/core": "^7.23.7",
    "@babel/code-frame": "^7.23.5",
    "@babel/plugin-proposal-class-properties": "^7.18.6",
    "@babel/plugin-proposal-object-rest-spread": "^7.20.7",
    "@babel/plugin-proposal-nullish-coalescing-operator": "^7.18.6",
    "@babel/plugin-proposal-numeric-separator": "^7.18.6",
    "@babel/plugin-proposal-optional-chaining": "^7.21.0",
    "@babel/plugin-transform-destructuring": "npm:@minh.nguyen/plugin-transform-destructuring@^7.5.2",
    "@babel/plugin-transform-runtime": "^7.23.7",
    "@babel/preset-env": "^7.23.7",
    "@babel/preset-react": "^7.23.3",
    "@babel/preset-typescript": "^7.23.3",
    "@babel/runtime": "^7.23.7",
    "@babel/types": "^7.23.6",
    "@definitelytyped/header-parser": "^0.1.1",
    "@definitelytyped/typescript-versions": "^0.0.184",
    "@definitelytyped/utils": "^0.0.191",
    "@types/node": "^18.19.4",
    "@types/react": "^18.2.46",
    "@types/react-dom": "18.2.7",
    "cross-fetch": "^4.0.0"
  },
  "nyc": {
    "include": [
      "packages/mui*/src/**/*.{js,ts,tsx}"
    ],
    "exclude": [
      "**/*.test.{js,ts,tsx}",
      "**/*.test/*"
    ],
    "sourceMap": false,
    "instrument": false
  }
}
