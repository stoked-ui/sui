{
  "componentDescription": "",
  "propDescriptions": {
    "animation": "The animation. If <code>false</code> the animation effect is disabled.",
    "children": "Used to render icon or text elements inside the Skeleton if <code>src</code> is not set. This can be an element, or just a string.",
    "component": "The component used for the root node. Either a string to use a HTML element or a component.",
    "height": "Height of the skeleton. Useful when you don&#39;t want to adapt the skeleton to a text element but for instance a card.",
    "level": "Applies the theme typography styles.",
    "loading": "If <code>true</code>, the skeleton appears.",
    "overlay": "If <code>true</code>, the skeleton&#39;s position will change to <code>absolute</code> to fill the available space of the nearest parent. This prop is useful to create a placeholder that has the element&#39;s dimensions.",
    "slotProps": "The props used for each slot inside.",
    "slots": "The components used for each slot inside. See <a href=\"#slots\">Slots API</a> below for more details.",
    "sx": "The system prop that allows defining system overrides as well as additional CSS styles. See the <a href=\"/system/getting-started/the-sx-prop/\">`sx` page</a> for more details.",
    "variant": "The type of content that will be rendered. To learn how to add your own variants, check out <a href=\"/joy-ui/customization/themed-components/#extend-variants\">Themed componentsâ€”Extend variants</a>.",
    "width": "Width of the skeleton. Useful when the skeleton is inside an inline element with no width of its own."
  },
  "classDescriptions": {
    "root": { "description": "Class name applied to the root element." },
    "variantOverlay": {
      "description": "Class name applied to {{nodeName}} if {{conditions}}.",
      "nodeName": "the root element",
      "conditions": "<code>variant=\"overlay\"</code>"
    },
    "variantCircular": {
      "description": "Class name applied to {{nodeName}} if {{conditions}}.",
      "nodeName": "the root element",
      "conditions": "<code>variant=\"circular\"</code>"
    },
    "variantRectangular": {
      "description": "Class name applied to {{nodeName}} if {{conditions}}.",
      "nodeName": "the root element",
      "conditions": "<code>variant=\"rectangular\"</code>"
    },
    "variantText": {
      "description": "Class name applied to {{nodeName}} if {{conditions}}.",
      "nodeName": "the root element",
      "conditions": "<code>variant=\"text\"</code>"
    },
    "variantInline": {
      "description": "Class name applied to {{nodeName}} if {{conditions}}.",
      "nodeName": "the root element",
      "conditions": "<code>variant=\"inline\"</code>"
    },
    "h1": {
      "description": "Class name applied to {{nodeName}} if {{conditions}}.",
      "nodeName": "the root element",
      "conditions": "<code>level=\"h1\"</code>"
    },
    "h2": {
      "description": "Class name applied to {{nodeName}} if {{conditions}}.",
      "nodeName": "the root element",
      "conditions": "<code>level=\"h2\"</code>"
    },
    "h3": {
      "description": "Class name applied to {{nodeName}} if {{conditions}}.",
      "nodeName": "the root element",
      "conditions": "<code>level=\"h3\"</code>"
    },
    "h4": {
      "description": "Class name applied to {{nodeName}} if {{conditions}}.",
      "nodeName": "the root element",
      "conditions": "<code>level=\"h4\"</code>"
    },
    "h5": {
      "description": "Class name applied to {{nodeName}} if {{conditions}}.",
      "nodeName": "the root element",
      "conditions": "<code>level=\"h5\"</code>"
    },
    "h6": {
      "description": "Class name applied to {{nodeName}} if {{conditions}}.",
      "nodeName": "the root element",
      "conditions": "<code>level=\"h6\"</code>"
    },
    "body1": {
      "description": "Class name applied to {{nodeName}} if {{conditions}}.",
      "nodeName": "the root element",
      "conditions": "<code>level=\"body1\"</code>"
    },
    "body2": {
      "description": "Class name applied to {{nodeName}} if {{conditions}}.",
      "nodeName": "the root element",
      "conditions": "<code>level=\"body2\"</code>"
    },
    "body3": {
      "description": "Class name applied to {{nodeName}} if {{conditions}}.",
      "nodeName": "the root element",
      "conditions": "<code>level=\"body3\"</code>"
    }
  },
  "slotDescriptions": { "root": "The component that renders the root." }
}
