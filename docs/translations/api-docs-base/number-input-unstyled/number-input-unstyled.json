{
  "componentDescription": "",
  "propDescriptions": {
    "component": "The component used for the root node. Either a string to use a HTML element or a component.",
    "defaultValue": "The default value. Use when the component is not controlled.",
    "disabled": "If <code>true</code>, the component is disabled. The prop defaults to the value (<code>false</code>) inherited from the parent FormControl component.",
    "error": "If <code>true</code>, the <code>input</code> will indicate an error by setting the <code>aria-invalid</code> attribute on the input and the <code>Mui-error</code> class on the root element.",
    "id": "The id of the <code>input</code> element.",
    "max": "The maximum value.",
    "min": "The minimum value.",
    "onValueChange": "Callback fired after the value is clamped and changes. Called with <code>undefined</code> when the value is unset.",
    "required": "If <code>true</code>, the <code>input</code> element is required. The prop defaults to the value (<code>false</code>) inherited from the parent FormControl component.",
    "slotProps": "The props used for each slot inside the NumberInput.",
    "slots": "The components used for each slot inside the InputBase. Either a string to use a HTML element or a component. See <a href=\"#slots\">Slots API</a> below for more details.",
    "step": "The amount that the value changes on each increment or decrement.",
    "value": "The current value. Use when the component is controlled."
  },
  "classDescriptions": {}
}
